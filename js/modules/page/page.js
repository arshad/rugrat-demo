// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(["../../app", "./controllers/showController"], function(App, ShowController) {
    return App.module("Page", function(Page, App, Backbone, Marionette, $, _) {
      var API;
      Page.Model = (function(_super) {

        __extends(Model, _super);

        Model.name = 'Model';

        function Model() {
          return Model.__super__.constructor.apply(this, arguments);
        }

        Model.prototype.url = '/api/v1/pages';

        return Model;

      })(Backbone.Model);
      Page.Collection = (function(_super) {

        __extends(Collection, _super);

        Collection.name = 'Collection';

        function Collection() {
          return Collection.__super__.constructor.apply(this, arguments);
        }

        Collection.prototype.model = Page.Model;

        Collection.prototype.url = '/api/v1/pages';

        return Collection;

      })(Backbone.Collection);
      Page.Router = (function(_super) {

        __extends(Router, _super);

        Router.name = 'Router';

        function Router() {
          return Router.__super__.constructor.apply(this, arguments);
        }

        Router.prototype.appRoutes = {
          'page/:id': 'showPage'
        };

        return Router;

      })(Marionette.AppRouter);
      API = {
        showPage: function(id) {
          return App.Page.Controllers.Show.showPage(id);
        }
      };
      return App.addInitializer(function() {
        return new Page.Router({
          controller: API
        });
      });
    });
  });

}).call(this);
